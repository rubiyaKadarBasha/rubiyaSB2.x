
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>scb.nextgen.dashboard</groupId>
		<artifactId>nextgen</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>securitymultifactor-api</artifactId>
	<name>securitymultifactor-api</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<swagger-annotations-version>2.0.8</swagger-annotations-version>
	</properties>



	<dependencies>
	
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>scb.nextgen.dashboard</groupId>
			<artifactId>commons</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader-tools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- dependencies are needed for the client bean being generated -->
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations-version}</version>
		</dependency>

	</dependencies>


	<build>
		<finalName>multifactorsecurity</finalName>
		<defaultGoal>spring-boot:run</defaultGoal>

		<testResources>
			<testResource>
				<directory>src/test/resources/</directory>
			</testResource>
			<testResource>
				<directory>src/test/features</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>Requires at least Maven 3.0</message>
							<version>[3.0.0,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>Requires at least JDK ${java.version}</message>
							<version>[${java.version}.0,)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/classes</outputDirectory>
							<useDefaultDelimiters>false</useDefaultDelimiters>
							<delimiters>
								<delimiter>#</delimiter>
							</delimiters>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.xml</include>
										<include>**/*.yml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.xml</exclude>
										<exclude>**/*.yml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>


				</executions>
			</plugin>
			<plugin>
				<!--8 Swagger OpenAPI 3 Note: In execution if you enable the goals it 
					will generate the model package again For contract purpose swagger model 
					and api generated as one document so unnecessary files are packaging. need 
					to separate swagger model and api's -->
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>3.0.8</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/openapi-client-generated/openapi.json</inputSpec>
							<language>java</language>
							<output>${project.basedir}</output>
							<modelPackage>scb.nextgen.dashboard.securitymultifactor.dto</modelPackage>
							<!-- <packageName>${client.base.package.name}</packageName> <modelPackage>${client.base.package.name}.model</modelPackage> 
								<apiPackage>${client.base.package.name}.api</apiPackage> <invokerPackage>${client.base.package.name}.invoker</invokerPackage> -->
							<generateApis>false</generateApis>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateSupportingFiles>false</generateSupportingFiles>
							<configOptions>
								<!-- <groupId>${project.groupId}</groupId> <artifactId>${project.artifactId}</artifactId> 
									<artifactVersion>${project.version}</artifactVersion> -->
								<library>jersey1</library>
								<java8>true</java8>
								<dateLibrary>java8</dateLibrary>
								<useBeanValidation>true</useBeanValidation>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<licenseName>Apache 2.0</licenseName>
								<licenseUrl>https://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</dependency>

			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration />
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>DEBUG</logback.loglevel>
				<!-- default Spring profiles -->
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
</project>